// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: settings/v1alpha1/middleware/v1/logger.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogOptionsGeneral_Format int32

const (
	LogOptionsGeneral_FORMAT_UNSPECIFIED LogOptionsGeneral_Format = 0
	LogOptionsGeneral_FORMAT_TXT         LogOptionsGeneral_Format = 1
	LogOptionsGeneral_FORMAT_JSON        LogOptionsGeneral_Format = 2
)

// Enum value maps for LogOptionsGeneral_Format.
var (
	LogOptionsGeneral_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_TXT",
		2: "FORMAT_JSON",
	}
	LogOptionsGeneral_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"FORMAT_TXT":         1,
		"FORMAT_JSON":        2,
	}
)

func (x LogOptionsGeneral_Format) Enum() *LogOptionsGeneral_Format {
	p := new(LogOptionsGeneral_Format)
	*p = x
	return p
}

func (x LogOptionsGeneral_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogOptionsGeneral_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes[0].Descriptor()
}

func (LogOptionsGeneral_Format) Type() protoreflect.EnumType {
	return &file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes[0]
}

func (x LogOptionsGeneral_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogOptionsGeneral_Format.Descriptor instead.
func (LogOptionsGeneral_Format) EnumDescriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{0, 0}
}

type LogOptionsGeneral_Level int32

const (
	LogOptionsGeneral_LEVEL_UNSPECIFIED LogOptionsGeneral_Level = 0
	LogOptionsGeneral_LEVEL_DEBUG       LogOptionsGeneral_Level = 1
	LogOptionsGeneral_LEVEL_INFO        LogOptionsGeneral_Level = 2
	LogOptionsGeneral_LEVEL_WARN        LogOptionsGeneral_Level = 3
	LogOptionsGeneral_LEVEL_ERROR       LogOptionsGeneral_Level = 4
	LogOptionsGeneral_LEVEL_FATAL       LogOptionsGeneral_Level = 5
)

// Enum value maps for LogOptionsGeneral_Level.
var (
	LogOptionsGeneral_Level_name = map[int32]string{
		0: "LEVEL_UNSPECIFIED",
		1: "LEVEL_DEBUG",
		2: "LEVEL_INFO",
		3: "LEVEL_WARN",
		4: "LEVEL_ERROR",
		5: "LEVEL_FATAL",
	}
	LogOptionsGeneral_Level_value = map[string]int32{
		"LEVEL_UNSPECIFIED": 0,
		"LEVEL_DEBUG":       1,
		"LEVEL_INFO":        2,
		"LEVEL_WARN":        3,
		"LEVEL_ERROR":       4,
		"LEVEL_FATAL":       5,
	}
)

func (x LogOptionsGeneral_Level) Enum() *LogOptionsGeneral_Level {
	p := new(LogOptionsGeneral_Level)
	*p = x
	return p
}

func (x LogOptionsGeneral_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogOptionsGeneral_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes[1].Descriptor()
}

func (LogOptionsGeneral_Level) Type() protoreflect.EnumType {
	return &file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes[1]
}

func (x LogOptionsGeneral_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogOptionsGeneral_Level.Descriptor instead.
func (LogOptionsGeneral_Level) EnumDescriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{0, 1}
}

// Preset configuration bundles for common logging scenarios
type ConsoleLoggerConfig_LogPreset int32

const (
	ConsoleLoggerConfig_PRESET_UNSPECIFIED ConsoleLoggerConfig_LogPreset = 0
	ConsoleLoggerConfig_PRESET_MINIMAL     ConsoleLoggerConfig_LogPreset = 1 // Only method, path, status code
	ConsoleLoggerConfig_PRESET_STANDARD    ConsoleLoggerConfig_LogPreset = 2 // Minimal + client IP, duration
	ConsoleLoggerConfig_PRESET_DETAILED    ConsoleLoggerConfig_LogPreset = 3 // Standard + headers, query params
	ConsoleLoggerConfig_PRESET_DEBUG       ConsoleLoggerConfig_LogPreset = 4 // Everything including request/response bodies
)

// Enum value maps for ConsoleLoggerConfig_LogPreset.
var (
	ConsoleLoggerConfig_LogPreset_name = map[int32]string{
		0: "PRESET_UNSPECIFIED",
		1: "PRESET_MINIMAL",
		2: "PRESET_STANDARD",
		3: "PRESET_DETAILED",
		4: "PRESET_DEBUG",
	}
	ConsoleLoggerConfig_LogPreset_value = map[string]int32{
		"PRESET_UNSPECIFIED": 0,
		"PRESET_MINIMAL":     1,
		"PRESET_STANDARD":    2,
		"PRESET_DETAILED":    3,
		"PRESET_DEBUG":       4,
	}
)

func (x ConsoleLoggerConfig_LogPreset) Enum() *ConsoleLoggerConfig_LogPreset {
	p := new(ConsoleLoggerConfig_LogPreset)
	*p = x
	return p
}

func (x ConsoleLoggerConfig_LogPreset) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsoleLoggerConfig_LogPreset) Descriptor() protoreflect.EnumDescriptor {
	return file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes[2].Descriptor()
}

func (ConsoleLoggerConfig_LogPreset) Type() protoreflect.EnumType {
	return &file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes[2]
}

func (x ConsoleLoggerConfig_LogPreset) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsoleLoggerConfig_LogPreset.Descriptor instead.
func (ConsoleLoggerConfig_LogPreset) EnumDescriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{2, 0}
}

type LogOptionsGeneral struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Log output format
	// env_interpolation: n/a (non-string)
	Format *LogOptionsGeneral_Format `protobuf:"varint,1,opt,name=format,enum=settings.v1alpha1.middleware.v1.LogOptionsGeneral_Format,def=0" json:"format,omitempty"`
	// Minimum log level
	// env_interpolation: n/a (non-string)
	Level         *LogOptionsGeneral_Level `protobuf:"varint,2,opt,name=level,enum=settings.v1alpha1.middleware.v1.LogOptionsGeneral_Level,def=0" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for LogOptionsGeneral fields.
const (
	Default_LogOptionsGeneral_Format = LogOptionsGeneral_FORMAT_UNSPECIFIED
	Default_LogOptionsGeneral_Level  = LogOptionsGeneral_LEVEL_UNSPECIFIED
)

func (x *LogOptionsGeneral) Reset() {
	*x = LogOptionsGeneral{}
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOptionsGeneral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOptionsGeneral) ProtoMessage() {}

func (x *LogOptionsGeneral) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOptionsGeneral.ProtoReflect.Descriptor instead.
func (*LogOptionsGeneral) Descriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{0}
}

func (x *LogOptionsGeneral) GetFormat() LogOptionsGeneral_Format {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return Default_LogOptionsGeneral_Format
}

func (x *LogOptionsGeneral) GetLevel() LogOptionsGeneral_Level {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Default_LogOptionsGeneral_Level
}

type LogOptionsHTTP struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Common fields available for any HTTP log entry
	// Include HTTP method (GET, POST, etc.)
	// env_interpolation: n/a (non-string)
	Method *bool `protobuf:"varint,100,opt,name=method,def=1" json:"method,omitempty"`
	// Include request path
	// env_interpolation: n/a (non-string)
	Path *bool `protobuf:"varint,101,opt,name=path,def=1" json:"path,omitempty"`
	// Include client IP address
	// env_interpolation: n/a (non-string)
	ClientIp *bool `protobuf:"varint,102,opt,name=client_ip,json=clientIp" json:"client_ip,omitempty"`
	// Include query string parameters
	// env_interpolation: n/a (non-string)
	QueryParams *bool `protobuf:"varint,103,opt,name=query_params,json=queryParams" json:"query_params,omitempty"`
	// Include protocol version (HTTP/1.1, HTTP/2, etc.)
	// env_interpolation: n/a (non-string)
	Protocol *bool `protobuf:"varint,104,opt,name=protocol" json:"protocol,omitempty"`
	// Include host from request (may differ from Host header)
	// env_interpolation: n/a (non-string)
	Host *bool `protobuf:"varint,105,opt,name=host" json:"host,omitempty"`
	// Include request scheme (http, https)
	// env_interpolation: n/a (non-string)
	Scheme *bool `protobuf:"varint,106,opt,name=scheme" json:"scheme,omitempty"`
	// Response-specific fields (only available when response is present)
	// Include HTTP response status code
	// env_interpolation: n/a (non-string)
	StatusCode *bool `protobuf:"varint,107,opt,name=status_code,json=statusCode,def=1" json:"status_code,omitempty"`
	// Include request processing time (only meaningful for response logging)
	// env_interpolation: n/a (non-string)
	Duration *bool `protobuf:"varint,108,opt,name=duration" json:"duration,omitempty"`
	// What to log for request and response
	// What to log for requests
	// env_interpolation: n/a (non-string)
	Request *LogOptionsHTTP_DirectionConfig `protobuf:"bytes,109,opt,name=request" json:"request,omitempty"`
	// What to log for responses
	// env_interpolation: n/a (non-string)
	Response      *LogOptionsHTTP_DirectionConfig `protobuf:"bytes,110,opt,name=response" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for LogOptionsHTTP fields.
const (
	Default_LogOptionsHTTP_Method     = bool(true)
	Default_LogOptionsHTTP_Path       = bool(true)
	Default_LogOptionsHTTP_StatusCode = bool(true)
)

func (x *LogOptionsHTTP) Reset() {
	*x = LogOptionsHTTP{}
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOptionsHTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOptionsHTTP) ProtoMessage() {}

func (x *LogOptionsHTTP) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOptionsHTTP.ProtoReflect.Descriptor instead.
func (*LogOptionsHTTP) Descriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{1}
}

func (x *LogOptionsHTTP) GetMethod() bool {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_LogOptionsHTTP_Method
}

func (x *LogOptionsHTTP) GetPath() bool {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return Default_LogOptionsHTTP_Path
}

func (x *LogOptionsHTTP) GetClientIp() bool {
	if x != nil && x.ClientIp != nil {
		return *x.ClientIp
	}
	return false
}

func (x *LogOptionsHTTP) GetQueryParams() bool {
	if x != nil && x.QueryParams != nil {
		return *x.QueryParams
	}
	return false
}

func (x *LogOptionsHTTP) GetProtocol() bool {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return false
}

func (x *LogOptionsHTTP) GetHost() bool {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return false
}

func (x *LogOptionsHTTP) GetScheme() bool {
	if x != nil && x.Scheme != nil {
		return *x.Scheme
	}
	return false
}

func (x *LogOptionsHTTP) GetStatusCode() bool {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return Default_LogOptionsHTTP_StatusCode
}

func (x *LogOptionsHTTP) GetDuration() bool {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return false
}

func (x *LogOptionsHTTP) GetRequest() *LogOptionsHTTP_DirectionConfig {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *LogOptionsHTTP) GetResponse() *LogOptionsHTTP_DirectionConfig {
	if x != nil {
		return x.Response
	}
	return nil
}

// Configuration for console logger middleware
type ConsoleLoggerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// General logging options (format, level)
	// env_interpolation: n/a (non-string)
	Options *LogOptionsGeneral `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
	// HTTP-specific field selection and formatting
	// env_interpolation: n/a (non-string)
	Fields *LogOptionsHTTP `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
	// Output destination (supports environment variable interpolation with ${VAR_NAME})
	// Examples: "stdout", "stderr", "/var/log/app.log", "file:///var/log/app-${HOSTNAME}.log"
	// env_interpolation: yes
	Output *string `protobuf:"bytes,3,opt,name=output,def=stdout" json:"output,omitempty"`
	// Preset configuration (applied before custom field overrides)
	// env_interpolation: n/a (non-string)
	Preset *ConsoleLoggerConfig_LogPreset `protobuf:"varint,4,opt,name=preset,enum=settings.v1alpha1.middleware.v1.ConsoleLoggerConfig_LogPreset,def=0" json:"preset,omitempty"`
	// Path filtering - paths are matched as prefixes
	// If set, only log requests matching these path prefixes
	// env_interpolation: yes
	IncludeOnlyPaths []string `protobuf:"bytes,5,rep,name=include_only_paths,json=includeOnlyPaths" json:"include_only_paths,omitempty"`
	// Exclude requests matching these path prefixes (e.g., "/health", "/metrics")
	// env_interpolation: yes
	ExcludePaths []string `protobuf:"bytes,6,rep,name=exclude_paths,json=excludePaths" json:"exclude_paths,omitempty"`
	// Method filtering
	// If set, only log these HTTP methods (e.g., ["GET", "POST"])
	// env_interpolation: yes
	IncludeOnlyMethods []string `protobuf:"bytes,7,rep,name=include_only_methods,json=includeOnlyMethods" json:"include_only_methods,omitempty"`
	// Exclude these HTTP methods from logging (e.g., ["OPTIONS"])
	// env_interpolation: yes
	ExcludeMethods []string `protobuf:"bytes,8,rep,name=exclude_methods,json=excludeMethods" json:"exclude_methods,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for ConsoleLoggerConfig fields.
const (
	Default_ConsoleLoggerConfig_Output = string("stdout")
	Default_ConsoleLoggerConfig_Preset = ConsoleLoggerConfig_PRESET_UNSPECIFIED
)

func (x *ConsoleLoggerConfig) Reset() {
	*x = ConsoleLoggerConfig{}
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsoleLoggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleLoggerConfig) ProtoMessage() {}

func (x *ConsoleLoggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsoleLoggerConfig.ProtoReflect.Descriptor instead.
func (*ConsoleLoggerConfig) Descriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{2}
}

func (x *ConsoleLoggerConfig) GetOptions() *LogOptionsGeneral {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ConsoleLoggerConfig) GetFields() *LogOptionsHTTP {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ConsoleLoggerConfig) GetOutput() string {
	if x != nil && x.Output != nil {
		return *x.Output
	}
	return Default_ConsoleLoggerConfig_Output
}

func (x *ConsoleLoggerConfig) GetPreset() ConsoleLoggerConfig_LogPreset {
	if x != nil && x.Preset != nil {
		return *x.Preset
	}
	return Default_ConsoleLoggerConfig_Preset
}

func (x *ConsoleLoggerConfig) GetIncludeOnlyPaths() []string {
	if x != nil {
		return x.IncludeOnlyPaths
	}
	return nil
}

func (x *ConsoleLoggerConfig) GetExcludePaths() []string {
	if x != nil {
		return x.ExcludePaths
	}
	return nil
}

func (x *ConsoleLoggerConfig) GetIncludeOnlyMethods() []string {
	if x != nil {
		return x.IncludeOnlyMethods
	}
	return nil
}

func (x *ConsoleLoggerConfig) GetExcludeMethods() []string {
	if x != nil {
		return x.ExcludeMethods
	}
	return nil
}

// Configuration for what gets logged for request or response
type LogOptionsHTTP_DirectionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to log this direction at all
	// env_interpolation: n/a (non-string)
	Enabled *bool `protobuf:"varint,1,opt,name=enabled,def=1" json:"enabled,omitempty"`
	// Include the full body content
	// env_interpolation: n/a (non-string)
	Body *bool `protobuf:"varint,2,opt,name=body" json:"body,omitempty"`
	// Body content larger than this will be truncated (0 for no limit)
	// env_interpolation: n/a (non-string)
	MaxBodySize *int32 `protobuf:"varint,3,opt,name=max_body_size,json=maxBodySize" json:"max_body_size,omitempty"`
	// Include the size of the body in bytes
	// env_interpolation: n/a (non-string)
	BodySize *bool `protobuf:"varint,4,opt,name=body_size,json=bodySize" json:"body_size,omitempty"`
	// Include headers
	// env_interpolation: n/a (non-string)
	Headers *bool `protobuf:"varint,5,opt,name=headers" json:"headers,omitempty"`
	// If set, only log these headers (e.g., ["Authorization", "X-Request-ID"])
	// env_interpolation: yes
	IncludeHeaders []string `protobuf:"bytes,6,rep,name=include_headers,json=includeHeaders" json:"include_headers,omitempty"`
	// Headers to exclude from logging (e.g., ["Cookie", "Set-Cookie"])
	// env_interpolation: yes
	ExcludeHeaders []string `protobuf:"bytes,7,rep,name=exclude_headers,json=excludeHeaders" json:"exclude_headers,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for LogOptionsHTTP_DirectionConfig fields.
const (
	Default_LogOptionsHTTP_DirectionConfig_Enabled = bool(true)
)

func (x *LogOptionsHTTP_DirectionConfig) Reset() {
	*x = LogOptionsHTTP_DirectionConfig{}
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOptionsHTTP_DirectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOptionsHTTP_DirectionConfig) ProtoMessage() {}

func (x *LogOptionsHTTP_DirectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOptionsHTTP_DirectionConfig.ProtoReflect.Descriptor instead.
func (*LogOptionsHTTP_DirectionConfig) Descriptor() ([]byte, []int) {
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP(), []int{1, 0}
}

func (x *LogOptionsHTTP_DirectionConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return Default_LogOptionsHTTP_DirectionConfig_Enabled
}

func (x *LogOptionsHTTP_DirectionConfig) GetBody() bool {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return false
}

func (x *LogOptionsHTTP_DirectionConfig) GetMaxBodySize() int32 {
	if x != nil && x.MaxBodySize != nil {
		return *x.MaxBodySize
	}
	return 0
}

func (x *LogOptionsHTTP_DirectionConfig) GetBodySize() bool {
	if x != nil && x.BodySize != nil {
		return *x.BodySize
	}
	return false
}

func (x *LogOptionsHTTP_DirectionConfig) GetHeaders() bool {
	if x != nil && x.Headers != nil {
		return *x.Headers
	}
	return false
}

func (x *LogOptionsHTTP_DirectionConfig) GetIncludeHeaders() []string {
	if x != nil {
		return x.IncludeHeaders
	}
	return nil
}

func (x *LogOptionsHTTP_DirectionConfig) GetExcludeHeaders() []string {
	if x != nil {
		return x.ExcludeHeaders
	}
	return nil
}

var File_settings_v1alpha1_middleware_v1_logger_proto protoreflect.FileDescriptor

const file_settings_v1alpha1_middleware_v1_logger_proto_rawDesc = "" +
	"\n" +
	",settings/v1alpha1/middleware/v1/logger.proto\x12\x1fsettings.v1alpha1.middleware.v1\"\x93\x03\n" +
	"\x11LogOptionsGeneral\x12e\n" +
	"\x06format\x18\x01 \x01(\x0e29.settings.v1alpha1.middleware.v1.LogOptionsGeneral.Format:\x12FORMAT_UNSPECIFIEDR\x06format\x12a\n" +
	"\x05level\x18\x02 \x01(\x0e28.settings.v1alpha1.middleware.v1.LogOptionsGeneral.Level:\x11LEVEL_UNSPECIFIEDR\x05level\"A\n" +
	"\x06Format\x12\x16\n" +
	"\x12FORMAT_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"FORMAT_TXT\x10\x01\x12\x0f\n" +
	"\vFORMAT_JSON\x10\x02\"q\n" +
	"\x05Level\x12\x15\n" +
	"\x11LEVEL_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vLEVEL_DEBUG\x10\x01\x12\x0e\n" +
	"\n" +
	"LEVEL_INFO\x10\x02\x12\x0e\n" +
	"\n" +
	"LEVEL_WARN\x10\x03\x12\x0f\n" +
	"\vLEVEL_ERROR\x10\x04\x12\x0f\n" +
	"\vLEVEL_FATAL\x10\x05\"\xc0\x05\n" +
	"\x0eLogOptionsHTTP\x12\x1c\n" +
	"\x06method\x18d \x01(\b:\x04trueR\x06method\x12\x18\n" +
	"\x04path\x18e \x01(\b:\x04trueR\x04path\x12\x1b\n" +
	"\tclient_ip\x18f \x01(\bR\bclientIp\x12!\n" +
	"\fquery_params\x18g \x01(\bR\vqueryParams\x12\x1a\n" +
	"\bprotocol\x18h \x01(\bR\bprotocol\x12\x12\n" +
	"\x04host\x18i \x01(\bR\x04host\x12\x16\n" +
	"\x06scheme\x18j \x01(\bR\x06scheme\x12%\n" +
	"\vstatus_code\x18k \x01(\b:\x04trueR\n" +
	"statusCode\x12\x1a\n" +
	"\bduration\x18l \x01(\bR\bduration\x12Y\n" +
	"\arequest\x18m \x01(\v2?.settings.v1alpha1.middleware.v1.LogOptionsHTTP.DirectionConfigR\arequest\x12[\n" +
	"\bresponse\x18n \x01(\v2?.settings.v1alpha1.middleware.v1.LogOptionsHTTP.DirectionConfigR\bresponse\x1a\xf2\x01\n" +
	"\x0fDirectionConfig\x12\x1e\n" +
	"\aenabled\x18\x01 \x01(\b:\x04trueR\aenabled\x12\x12\n" +
	"\x04body\x18\x02 \x01(\bR\x04body\x12\"\n" +
	"\rmax_body_size\x18\x03 \x01(\x05R\vmaxBodySize\x12\x1b\n" +
	"\tbody_size\x18\x04 \x01(\bR\bbodySize\x12\x18\n" +
	"\aheaders\x18\x05 \x01(\bR\aheaders\x12'\n" +
	"\x0finclude_headers\x18\x06 \x03(\tR\x0eincludeHeaders\x12'\n" +
	"\x0fexclude_headers\x18\a \x03(\tR\x0eexcludeHeaders\"\xdb\x04\n" +
	"\x13ConsoleLoggerConfig\x12L\n" +
	"\aoptions\x18\x01 \x01(\v22.settings.v1alpha1.middleware.v1.LogOptionsGeneralR\aoptions\x12G\n" +
	"\x06fields\x18\x02 \x01(\v2/.settings.v1alpha1.middleware.v1.LogOptionsHTTPR\x06fields\x12\x1e\n" +
	"\x06output\x18\x03 \x01(\t:\x06stdoutR\x06output\x12j\n" +
	"\x06preset\x18\x04 \x01(\x0e2>.settings.v1alpha1.middleware.v1.ConsoleLoggerConfig.LogPreset:\x12PRESET_UNSPECIFIEDR\x06preset\x12,\n" +
	"\x12include_only_paths\x18\x05 \x03(\tR\x10includeOnlyPaths\x12#\n" +
	"\rexclude_paths\x18\x06 \x03(\tR\fexcludePaths\x120\n" +
	"\x14include_only_methods\x18\a \x03(\tR\x12includeOnlyMethods\x12'\n" +
	"\x0fexclude_methods\x18\b \x03(\tR\x0eexcludeMethods\"s\n" +
	"\tLogPreset\x12\x16\n" +
	"\x12PRESET_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0ePRESET_MINIMAL\x10\x01\x12\x13\n" +
	"\x0fPRESET_STANDARD\x10\x02\x12\x13\n" +
	"\x0fPRESET_DETAILED\x10\x03\x12\x10\n" +
	"\fPRESET_DEBUG\x10\x04BIZGgithub.com/atlanticdynamic/firelynx/gen/settings/v1alpha1/middleware/v1b\beditionsp\xe8\a"

var (
	file_settings_v1alpha1_middleware_v1_logger_proto_rawDescOnce sync.Once
	file_settings_v1alpha1_middleware_v1_logger_proto_rawDescData []byte
)

func file_settings_v1alpha1_middleware_v1_logger_proto_rawDescGZIP() []byte {
	file_settings_v1alpha1_middleware_v1_logger_proto_rawDescOnce.Do(func() {
		file_settings_v1alpha1_middleware_v1_logger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_settings_v1alpha1_middleware_v1_logger_proto_rawDesc), len(file_settings_v1alpha1_middleware_v1_logger_proto_rawDesc)))
	})
	return file_settings_v1alpha1_middleware_v1_logger_proto_rawDescData
}

var file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_settings_v1alpha1_middleware_v1_logger_proto_goTypes = []any{
	(LogOptionsGeneral_Format)(0),          // 0: settings.v1alpha1.middleware.v1.LogOptionsGeneral.Format
	(LogOptionsGeneral_Level)(0),           // 1: settings.v1alpha1.middleware.v1.LogOptionsGeneral.Level
	(ConsoleLoggerConfig_LogPreset)(0),     // 2: settings.v1alpha1.middleware.v1.ConsoleLoggerConfig.LogPreset
	(*LogOptionsGeneral)(nil),              // 3: settings.v1alpha1.middleware.v1.LogOptionsGeneral
	(*LogOptionsHTTP)(nil),                 // 4: settings.v1alpha1.middleware.v1.LogOptionsHTTP
	(*ConsoleLoggerConfig)(nil),            // 5: settings.v1alpha1.middleware.v1.ConsoleLoggerConfig
	(*LogOptionsHTTP_DirectionConfig)(nil), // 6: settings.v1alpha1.middleware.v1.LogOptionsHTTP.DirectionConfig
}
var file_settings_v1alpha1_middleware_v1_logger_proto_depIdxs = []int32{
	0, // 0: settings.v1alpha1.middleware.v1.LogOptionsGeneral.format:type_name -> settings.v1alpha1.middleware.v1.LogOptionsGeneral.Format
	1, // 1: settings.v1alpha1.middleware.v1.LogOptionsGeneral.level:type_name -> settings.v1alpha1.middleware.v1.LogOptionsGeneral.Level
	6, // 2: settings.v1alpha1.middleware.v1.LogOptionsHTTP.request:type_name -> settings.v1alpha1.middleware.v1.LogOptionsHTTP.DirectionConfig
	6, // 3: settings.v1alpha1.middleware.v1.LogOptionsHTTP.response:type_name -> settings.v1alpha1.middleware.v1.LogOptionsHTTP.DirectionConfig
	3, // 4: settings.v1alpha1.middleware.v1.ConsoleLoggerConfig.options:type_name -> settings.v1alpha1.middleware.v1.LogOptionsGeneral
	4, // 5: settings.v1alpha1.middleware.v1.ConsoleLoggerConfig.fields:type_name -> settings.v1alpha1.middleware.v1.LogOptionsHTTP
	2, // 6: settings.v1alpha1.middleware.v1.ConsoleLoggerConfig.preset:type_name -> settings.v1alpha1.middleware.v1.ConsoleLoggerConfig.LogPreset
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_settings_v1alpha1_middleware_v1_logger_proto_init() }
func file_settings_v1alpha1_middleware_v1_logger_proto_init() {
	if File_settings_v1alpha1_middleware_v1_logger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_settings_v1alpha1_middleware_v1_logger_proto_rawDesc), len(file_settings_v1alpha1_middleware_v1_logger_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_settings_v1alpha1_middleware_v1_logger_proto_goTypes,
		DependencyIndexes: file_settings_v1alpha1_middleware_v1_logger_proto_depIdxs,
		EnumInfos:         file_settings_v1alpha1_middleware_v1_logger_proto_enumTypes,
		MessageInfos:      file_settings_v1alpha1_middleware_v1_logger_proto_msgTypes,
	}.Build()
	File_settings_v1alpha1_middleware_v1_logger_proto = out.File
	file_settings_v1alpha1_middleware_v1_logger_proto_goTypes = nil
	file_settings_v1alpha1_middleware_v1_logger_proto_depIdxs = nil
}
