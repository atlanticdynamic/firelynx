edition = "2023";

package settings.v1alpha1;

import "google/protobuf/duration.proto";
import "settings/v1alpha1/apps.proto";
import "settings/v1alpha1/logging.proto";
import "settings/v1alpha1/static_data.proto";

option go_package = "github.com/atlanticdynamic/firelynx/gen/settings/v1alpha1";

// Server configuration root message
message ServerConfig {
  string version = 1 [default = "v1"];
  LogOptions logging = 2;

  // Core components
  repeated Listener listeners = 3;
  repeated Endpoint endpoints = 4;
  repeated AppDefinition apps = 5;
}

// Listener configures a protocol/socket layer service (there could be multiple)
message Listener {
  string id = 1;
  string address = 2; // ":8080", "unix:/tmp/sock.sock", etc.

  // Protocol-specific options
  oneof protocol_options {
    HttpListenerOptions http = 3;
    GrpcListenerOptions grpc = 4;
  }
}

// HTTP listener specific options
message HttpListenerOptions {
  google.protobuf.Duration read_timeout = 1;
  google.protobuf.Duration write_timeout = 2;
  google.protobuf.Duration idle_timeout = 3;
  google.protobuf.Duration drain_timeout = 4;
  // bool enable_cors = 5;
  // repeated string cors_allowed_origins = 6;
}

// gRPC listener specific options
message GrpcListenerOptions {
  google.protobuf.Duration max_connection_idle = 1;
  google.protobuf.Duration max_connection_age = 2;
  int32 max_concurrent_streams = 3;
}

// Endpoint connects listeners to apps
message Endpoint {
  string id = 1;
  repeated string listener_ids = 2;
  repeated Route routes = 3;
}

// Route defines a rule for directing traffic from an endpoint to an app
message Route {
  string app_id = 1;
  StaticData static_data = 2;

  // Condition for matching this route
  oneof condition {
    string http_path = 3; // Match based on HTTP path prefix
    string grpc_service = 4; // Match based on gRPC full service name
  }
}
