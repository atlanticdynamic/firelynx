edition = "2023";

package settings.v1alpha1;

import "google/protobuf/duration.proto";
import "settings/v1alpha1/apps.proto";
import "settings/v1alpha1/logging.proto";
import "settings/v1alpha1/static_data.proto";

option go_package = "github.com/atlanticdynamic/firelynx/gen/settings/v1alpha1";

// Server configuration root message
message ServerConfig {
  string version = 1 [default = "v1"];
  LogOptions logging = 2;
  repeated Listener listeners = 3;
  repeated Endpoint endpoints = 4;
  repeated AppDefinition apps = 5;
}

// Listener configures a protocol/socket layer service (there could be multiple)
message Listener {
  // ListenerType defines the type of listener
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_HTTP = 1;
    TYPE_GRPC = 2;
  }

  string id = 1; // unique name for this listener
  string address = 2; // ":8080", "unix:/tmp/sock.sock", etc.
  Type type = 3 [default = TYPE_HTTP]; // type of listener (HTTP, gRPC, etc.)

  // Protocol-specific options
  oneof protocol_options {
    HttpListenerOptions http = 4;
    GrpcListenerOptions grpc = 5;
  }
}

// HTTP listener specific options
message HttpListenerOptions {
  google.protobuf.Duration read_timeout = 1;
  google.protobuf.Duration write_timeout = 2;
  google.protobuf.Duration idle_timeout = 3;
  google.protobuf.Duration drain_timeout = 4;
}

// gRPC listener specific options
message GrpcListenerOptions {
  google.protobuf.Duration max_connection_idle = 1;
  google.protobuf.Duration max_connection_age = 2;
  int32 max_concurrent_streams = 3;
}

// Endpoint connects: listener -> routes -> apps
message Endpoint {
  string id = 1; // unique name for this endpoint
  string listener_id = 2; // listener this endpoint is attached to
  repeated Route routes = 3; // routes that direct traffic to apps
}

// Route defines a rule for directing traffic from an endpoint to an app
message Route {
  string app_id = 1; // the app name this route directs traffic to
  StaticData static_data = 2; // static data to pass to the app
  oneof rule {
    HttpRule http = 3;
    GrpcRule grpc = 4;
  }
}

message HttpRule {
  string path_prefix = 1;
  string method = 2;
}

message GrpcRule {
  string service = 1;
  string method = 2;
}
